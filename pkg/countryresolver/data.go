package countryresolver

import "sort"

// buildBoxes enumerates coarse rectangular boundaries for countries
// where realtime sensors have been observed.  The list intentionally
// prefers more precise rectangles so sensors near borders resolve to the
// expected state.
func buildBoxes() []regionBox {
	regions := []regionBox{
		newBox("MO", "Macao", 22.0, 22.4, 113.4, 113.7),
		newBox("HK", "Hong Kong", 22.1, 22.6, 113.8, 114.5),
		newBox("SG", "Singapore", 1.1, 1.6, 103.6, 104.1),
		newBox("RW", "Rwanda", -3.0, -0.5, 28.5, 31.0),
		newBox("SN", "Senegal", 12.0, 17.5, -18.5, -11.0),
		newBox("CI", "CÃ´te d'Ivoire", 4.0, 10.0, -8.6, -2.5),
		newBox("GH", "Ghana", 4.0, 11.5, -3.5, 1.8),
		newBox("TG", "Togo", 6.0, 11.5, -0.5, 1.8),
		newBox("BJ", "Benin", 6.0, 12.5, 1.0, 3.8),
		newBox("NG", "Nigeria", 4.0, 14.5, 2.0, 15.0),
		newBox("TH", "Thailand", 5.0, 21.0, 97.0, 106.0),
		newBox("VN", "Vietnam", 8.0, 24.5, 102.0, 110.5),
		newBox("IN", "India", 6.0, 37.5, 68.0, 98.0),
		newBox("TW", "Taiwan", 21.0, 26.5, 119.0, 123.5),
		newBox("KR", "South Korea", 33.0, 39.5, 124.0, 131.5),
		newBox("JP", "Japan", 30.0, 46.5, 129.0, 146.5),
		newBox("JP", "Japan", 24.0, 29.5, 122.0, 132.0),
		newBox("CN", "China", 18.0, 54.0, 73.0, 135.0),
		newBox("US", "United States", 24.0, 49.5, -125.0, -66.0),
		newBox("US", "United States", 18.0, 23.0, -161.0, -154.0),
		newBox("US", "United States", 51.0, 72.0, -171.0, -129.0),
		newBox("CA", "Canada", 41.0, 84.0, -141.0, -52.0),
		newBox("MX", "Mexico", 14.0, 33.0, -118.0, -86.0),
		newBox("NZ", "New Zealand", -48.0, -33.0, 165.0, 180.0),
		newBox("AU", "Australia", -45.0, -9.0, 112.0, 155.0),
		newBox("FJ", "Fiji", -21.5, -15.0, 176.0, 180.0),
		newBox("BO", "Bolivia", -23.0, -9.0, -70.0, -57.0),
		newBox("PE", "Peru", -19.0, -3.0, -82.0, -68.0),
		newBox("ES", "Spain", 35.5, 44.5, -10.0, 4.5),
		newBox("PT", "Portugal", 36.5, 42.5, -9.8, -6.0),
		newBox("FR", "France", 41.0, 51.5, -5.5, 9.5),
		newBox("IT", "Italy", 36.0, 47.5, 6.0, 19.0),
		newBox("CH", "Switzerland", 45.5, 48.5, 5.0, 11.0),
		newBox("SI", "Slovenia", 45.3, 47.0, 13.0, 16.0),
		newBox("HR", "Croatia", 42.0, 47.0, 13.0, 20.5),
		newBox("AT", "Austria", 46.0, 49.5, 9.0, 17.0),
		newBox("DE", "Germany", 47.0, 55.5, 5.0, 16.0),
		newBox("NL", "Netherlands", 50.5, 54.5, 3.0, 8.0),
		newBox("BE", "Belgium", 49.5, 51.7, 2.0, 6.6),
		newBox("LU", "Luxembourg", 49.3, 51.0, 5.5, 6.6),
		newBox("UK", "United Kingdom", 49.5, 60.0, -9.5, 2.5),
		newBox("IE", "Ireland", 51.0, 56.0, -11.0, -5.0),
		newBox("IS", "Iceland", 63.0, 67.5, -25.0, -12.0),
		newBox("NO", "Norway", 58.0, 72.5, 5.0, 32.5),
		newBox("NO", "Norway", 74.0, 82.5, 5.0, 34.0),
		newBox("SE", "Sweden", 55.0, 70.5, 11.0, 25.5),
		newBox("FI", "Finland", 59.0, 70.5, 20.0, 32.0),
		newBox("DK", "Denmark", 54.0, 58.0, 8.0, 15.0),
		newBox("PL", "Poland", 49.0, 55.0, 14.0, 25.0),
		newBox("CZ", "Czechia", 48.0, 51.2, 12.0, 19.0),
		newBox("SK", "Slovakia", 47.5, 50.0, 16.0, 23.0),
		newBox("HU", "Hungary", 45.5, 49.5, 16.0, 23.0),
		newBox("RO", "Romania", 43.0, 49.5, 20.0, 30.0),
		newBox("BG", "Bulgaria", 41.0, 44.5, 22.0, 29.5),
		newBox("RS", "Serbia", 42.0, 47.5, 18.0, 23.5),
		newBox("BA", "Bosnia and Herzegovina", 42.0, 46.5, 16.0, 19.0),
		newBox("ME", "Montenegro", 41.5, 43.8, 18.4, 20.5),
		newBox("MK", "North Macedonia", 40.5, 43.0, 20.4, 23.0),
		newBox("AL", "Albania", 39.0, 43.0, 19.0, 21.5),
		newBox("GR", "Greece", 34.5, 42.5, 19.0, 29.5),
		newBox("UA", "Ukraine", 44.0, 53.5, 22.0, 41.5),
		newBox("BY", "Belarus", 51.0, 56.5, 23.0, 33.0),
		newBox("LT", "Lithuania", 53.5, 56.5, 20.5, 26.0),
		newBox("LV", "Latvia", 56.0, 58.5, 20.5, 28.0),
		newBox("EE", "Estonia", 57.0, 60.0, 22.0, 28.5),
		newBox("GE", "Georgia", 41.0, 44.8, 40.0, 47.5),
		newBox("AM", "Armenia", 38.5, 41.5, 43.0, 47.5),
		newBox("AZ", "Azerbaijan", 38.5, 42.5, 44.0, 51.0),
		newBox("TR", "Turkey", 35.0, 43.5, 25.0, 45.0),
		newBox("KG", "Kyrgyzstan", 39.0, 44.5, 69.0, 81.5),
		newBox("KZ", "Kazakhstan", 40.0, 56.5, 46.0, 88.0),
		newBox("RU", "Russia", 54.0, 68.0, 19.0, 31.0),
		newBox("RU", "Russia", 52.0, 72.5, 30.0, 180.0),
		newBox("RU", "Russia", 43.0, 47.5, 38.0, 48.0),
		newBox("SA", "Saudi Arabia", 15.0, 33.0, 34.0, 56.0),
		newBox("AE", "United Arab Emirates", 22.0, 26.5, 51.5, 56.5),
		newBox("QA", "Qatar", 24.0, 26.5, 50.5, 52.0),
		newBox("BH", "Bahrain", 25.5, 26.5, 50.2, 50.8),
		newBox("OM", "Oman", 16.0, 26.0, 52.0, 60.0),
		newBox("EG", "Egypt", 21.0, 32.5, 24.0, 36.0),
		newBox("ZA", "South Africa", -35.0, -21.0, 16.0, 33.0),
		newBox("BR", "Brazil", -35.0, 6.0, -75.0, -34.0),
		newBox("AR", "Argentina", -56.0, -21.0, -74.0, -53.0),
		newBox("CL", "Chile", -56.0, -17.0, -76.0, -66.0),
		newBox("CO", "Colombia", -5.0, 13.0, -79.0, -66.0),
		newBox("EC", "Ecuador", -5.5, 2.0, -92.0, -75.0),
		newBox("UY", "Uruguay", -35.0, -30.0, -58.5, -53.0),
		newBox("PY", "Paraguay", -28.0, -18.0, -63.5, -54.0),
	}
	sort.SliceStable(regions, func(i, j int) bool {
		return regions[i].area < regions[j].area
	})
	return regions
}
